{"version":3,"sources":["Components/Time/time.js","Components/Navbar/logo.png","Components/Navbar/navbar.js","Components/Timezones/tz.js","App.js","index.js"],"names":["Time","useState","year","month","day","hour","minute","weekday","seconds","displayTime","setDisplayTime","translateWeekday","Date","getDay","translateMonth","getMonth","leadingZero","num","runTime","time","getFullYear","getDate","getHours","minutes","getMinutes","getSeconds","useEffect","setInterval","className","Navbar","props","src","logo","alt","placeholder","onChange","e","addTZ","target","value","toLocaleLowerCase","filterList","map","name","onClick","addToExistingTZ","moment","require","Timezones","tzCountry","tzMajorCity","tzDate","tzYear","tzHour","tzMinute","tzSeconds","displayTZtime","setDisplayTZtime","runTZtime","timezone","tz","splitName","_z","split","format","tzWeekDay","App","tzList","names","timezones","setTimezones","filterNames","setFilterNames","existingTZ","setExistingTZ","filterSearch","filter","toLowerCase","includes","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.009dfff7.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport \"./time.css\";\n\nconst Time = () => {\n    \n    const [displayTime, setDisplayTime] = useState({ \n        year: 0, \n        month: 0,\n        day: 0,\n        hour: 0,\n        minute: 0,\n        weekday: 0,\n        seconds: 0 });\n\n    // weekday\n    function translateWeekday(weekday) {\n        switch (new Date().getDay()) {\n            case 0:\n                return \"Sun\";\n            case 1:\n                return \"Mon\";\n            case 2:\n                return \"Tue\";\n            case 3:\n                return \"Wed\";\n            case 4:\n                return \"Thu\";\n            case 5:\n                return \"Fri\";\n            case 6:\n                return \"Sat\";      \n            default:\n                return \" \";\n        }\n    }\n\n    // month\n    function translateMonth(month) {\n        switch (new Date().getMonth()) {\n            case 0:\n                return \"January\";\n            case 1:\n                return \"February\";\n            case 2:\n                return \"March\";\n            case 3:\n                return \"April\";\n            case 4:\n                return \"May\";\n            case 5:\n                return \"June\";\n            case 6:\n                return \"July\";\n            case 7:\n                return \"August\";\n            case 8:\n                return \"September\";\n            case 9:\n                return \"October\";\n            case 10:\n                return \"November\";\n            case 11:\n                return \"December\";  \n            default:\n                return \" \";\n        }\n    }\n\n    // adding 0s to numbers less than 10\n    function leadingZero(num) {\n        return num < 10 ? (\"0\" + num) : num;\n    }\n\n\n    function runTime() { \n        let time = new Date();\n        \n        setDisplayTime({\n            year: time.getFullYear(),\n            month: translateMonth(time.getMonth()),\n            day: time.getDate(),\n            hour: time.getHours(),\n            minutes: time.getMinutes(),\n            weekday: translateWeekday(time.getDay()),\n            seconds: time.getSeconds(),\n        });\n    };\n    \n\n    useEffect(() => {\n        runTime();\n        setInterval(runTime, 1000);\n    }, [])\n\n    return (\n        <div className=\"local-time\">\n            <div className=\"local-month-year\">\n                {displayTime.month} {displayTime.day} {displayTime.year}\n            </div>\n            <div className=\"time-location\">\n                Your local time\n            </div>\n            <div className=\"local-weekday\">\n                {displayTime.weekday}\n            </div>\n\n            {/* having time display 0s here instead of object */}\n            <div className=\"local-hour-minutes\">\n                {leadingZero(displayTime.hour)}:\n                {leadingZero(displayTime.minutes)}\n                <span className=\"local-seconds\"> {leadingZero(displayTime.seconds)}</span>\n            </div>\n\n        </div>\n    )\n};\n\nexport default Time;","export default __webpack_public_path__ + \"static/media/logo.40a4848a.png\";","import React from \"react\";\nimport \"./navbar.css\";\nimport logo from \"./logo.png\";\n\nconst Navbar = (props) => {\n    const setArrayTZnames = () => {\n        return (\n            <ul>\n                {props.filterList.map(name => <li \n                    className=\"tz-name\" \n                    key={name} \n                    onClick={() => props.addToExistingTZ(name)}>{name}</li>)}\n            </ul>\n        );\n    }\n    \n    // rendering items\n    return (\n        <div className=\"navBar\">\n            <div>\n                <img src={logo} alt=\"Red Clock\" className=\"clock-logo\"></img>\n                <h1 className=\"app-title\">Time Station</h1>\n            </div>\n            <input \n                className=\"search-bar\" \n                placeholder=\"ex: America/Los-Angeles\" \n                onChange={e => props.addTZ(e.target.value.toLocaleLowerCase())}>\n            </input>\n            <div className=\"filter-tz\">{setArrayTZnames()}</div>\n            \n        </div>\n    )\n}\n\nexport default Navbar;","import React, { useEffect, useState } from \"react\";\nimport \"./tz.css\"\n\n// importing momentjs\nconst moment = require(\"moment-timezone\");\n\nconst Timezones = (props) => {\n    \n    const [displayTZtime, setDisplayTZtime] = useState({\n        tzCountry: 0,\n        tzMajorCity: 0,\n        tzDate: 0,\n        tzYear: 0,\n        tzHour: 0,\n        tzMinute: 0,\n        tzSeconds: 0\n    });\n\n    // -------- running TZ time to be more dynamic --------\n    function runTZtime() {\n        let timezone = moment().tz(props.tz);\n        let tzName = timezone._z.name;\n        let splitName = tzName.split(\"/\");\n\n        setDisplayTZtime({\n            tzCountry : splitName[0],\n            tzMajorCity : splitName[1],\n            tzDate : timezone.format(\"MMMM DD YYYY\"),\n            tzWeekDay : timezone.format(\"ddd\"),\n            tzHour : timezone.format(\"HH\"),\n            tzMinute : timezone.format(\"mm\"),\n            tzSeconds : timezone.format(\"ss\"),\n        });\n    };\n\n    useEffect(() => {\n        runTZtime();\n        setInterval(runTZtime, 1000);\n    }, []);\n\n    return (\n        <div className=\"tz-time\">\n            <div className=\"tz-month-year\">{displayTZtime.tzDate}</div>\n            <div className=\"tz-country\">{displayTZtime.tzCountry}</div>\n            <div className=\"tz-major-city\">{displayTZtime.tzMajorCity}</div>\n            <div className=\"tz-weekday\">{displayTZtime.tzWeekDay}</div>\n            <div>\n                {displayTZtime.tzHour}:{displayTZtime.tzMinute}\n                <span className=\"tz-seconds\"> {displayTZtime.tzSeconds}</span>\n            </div>\n        </div>\n    );\n};\n\nexport default Timezones;","import React, {useEffect, useState} from \"react\";\nimport './App.css';\nimport Time from \"./Components/Time/time\";\nimport Navbar from \"./Components/Navbar/navbar\";\nimport Timezones from \"./Components/Timezones/tz\";\n\nconst moment = require(\"moment-timezone\");\n\nfunction App() {\n  \n  const tzList = moment.tz.names();\n  const [timezones, setTimezones] = useState(\"\");\n  const [filterNames, setFilterNames] = useState([]);\n  const [existingTZ, setExistingTZ] = useState([]);\n  \n  \n  \n  // user input will only pop up based on input\n  useEffect(() => {\n    const filterSearch = tzList.filter(tz => tz.toLowerCase().includes(timezones))\n    setFilterNames(timezones.length === 0 ? [] : filterSearch);\n  }, [timezones]);\n\n  return (\n    <div className=\"App\">\n      <Navbar \n        addToExistingTZ={tz => setExistingTZ([...existingTZ, tz])} \n        addTZ={tz => setTimezones(tz)} \n        filterList={filterNames}\n      />\n      <Time />\n      {existingTZ.map(tz => <Timezones tz={tz} timezones={timezones} />)}\n      \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}